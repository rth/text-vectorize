version: 2

jobs:
  rust-stable:
    working_directory: ~/repo
    docker:
      - image: rust:1.38.0-slim-stretch
    steps:
      - run:
          name: dependencies
          command: |
            apt-get update
            apt-get install -y build-essential git
      - checkout
      - run:
          name: build
          command: |
            cargo build

      - run:
          name: test
          command: |
            cargo test
  wasm32:
    working_directory: ~/repo
    docker:
      - image: rust:1.38.0-slim-stretch
    steps:
      - run:
          name: dependencies
          command: |
            apt-get update
            apt-get install -y build-essential git
            rustup target add wasm32-unknown-unknown

      - checkout

      - run:
          name: test
          command: |
            cargo build --target wasm32-unknown-unknown

  python:
    working_directory: ~/repo
    docker:
      - image: konstin2/maturin:v0.8.2-alpha.1
    steps:
      - checkout
      - run:
          name: dependencies
          command: |
            python3.7 -m pip install tox
            rustup default nightly-2019-11-01
      - run:
          name: build-wheels
          command: |
            set -ex
            cd python
            export PATH="$PATH:/opt/python/cp38-cp38m/bin/"
            for PYBIN in python3.{6,7,8}; do
                "$PYBIN" -m pip install wheel==0.31.1 auditwheel==2.0.0 pytest hypothesis
                "$PYBIN" -m pip install -r ../ci/requirements-build.txt
                "$PYBIN" -m python setup.py bdist_wheel
            done
            for whl in dist/*.whl; do
                auditwheel repair "$whl" -w dist/
            done
            rm dist/*-linux_*
      - run:
          name: test
          command: |
            set -ex
            cd python
            export PATH="$PATH:/opt/python/cp38-cp38m/bin/"
            for PYBIN in python3.{6,7,8}; do
                "$PYBIN" -m pip uninstall -y vtext
                cd /tmp/
                "$PYBIN" -m pip install --pre --no-index --find-links /root/repo/python/dist/ vtext
                "$PYBIN" -m pip install pytest-faulthandler
                "$PYBIN" -m pytest -sv --pyargs vtext
                cd -
            done
      - persist_to_workspace:
          root: .
          paths:
            - ./python/dist/
      - store_artifacts:
          path: /root/repo/python/dist/


  upload-wheels:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: upload-wheels
          command: |
            python -m venv venv
            source venv/bin/activate
            pip install awscli
            aws s3 sync --exclude="*" --include="*manylinux*" --cache-control max-age=60 python/dist/ s3://vtext/dist/ 

  docs:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: dependencies
          command: |
            python -m venv venv
            source venv/bin/activate
            pip install -r python/requirements.txt
            pip install -r doc/requirements-doc.txt
            pip install awscli
            pip install --pre --no-index --find-links python/dist/ vtext
      - run:
          name: html docs
          command: |
            source venv/bin/activate
            cd doc/
            make html
      - run:
          name: upload docs
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]
            then
                source venv/bin/activate
                aws s3 sync --delete doc/_build/html/ s3://vtext/doc/latest/ --cache-control max-age=60
            fi
      - store_artifacts:
          path: /root/repo/doc/_build/html/


  lint:
    working_directory: ~/repo
    docker:
      - image: rthz/rust-nightly-python37
    steps:
      - checkout

      - run:
          name: dependencies
          command: |
            apt-get update
            rustup component add rustfmt-preview
            python -m pip install flake8 black

      - run:
          name: lint
          command: |
            cargo fmt -- --check
            flake8 --max-line-length=88 python/ benchmarks/
            black --check python/ benchmarks/ evaluation/
            cd python && cargo fmt -- --check


workflows:
  version: 2
  build:
    jobs:
      - rust-stable
      - wasm32
      - python
      - lint
      - upload-wheels:
          requires:
            - python
            - lint
            - rust-stable
          filters:
            branches:
              only: master
      - docs:
          requires:
            - python
