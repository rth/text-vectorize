version: 2

jobs:
  rust-stable:
    working_directory: ~/repo
    docker:
      - image: rust:1.31.0-slim-stretch
    steps:
      - checkout
      - run:
          name: dependencies
          command: |
            apt-get update
            apt-get install -y build-essential

      - run:
          name: build
          command: |
            cargo build

      - run:
          name: test
          command: |
            cargo test

  python:
    working_directory: ~/repo
    docker:
      - image: konstin2/pyo3-pack:0.5.0
    steps:
      - checkout
      - run:
          name: dependencies
          command: |
            python3.7 -m pip install tox
            rustup default nightly-2019-02-28
            rustup target add x86_64-unknown-linux-musl
      # - run:
      #     name: test
      #     command: |
      #       cd python
      #       tox
      - run:
          name: build-wheels
          command: |
            cd python
            for PYBIN in python3.{5,6,7}; do
                "$PYBIN" -m pip install -r requirements.txt
                "$PYBIN" -m pip install wheel==0.31.1 auditwheel==2.0.0
                "$PYBIN" setup.py bdist_wheel
            done
            for whl in dist/*.whl; do
                auditwheel repair "$whl" -w dist/
            done
      - run:
          name: upload-wheels
          command: |
            cd python
            python3.7 -m pip install awscli
            aws s3 cp dist/*manylinux*.whl s3://vtext/dist/
      - store_artifacts:
          path: /root/repo/python/dist/

  lint:
    working_directory: ~/repo
    docker:
      - image: rthz/rust-nightly-python37
    steps:
      - checkout

      - run:
          name: dependencies
          command: |
            apt-get update
            rustup component add rustfmt-preview
            python -m pip install flake8 black

      - run:
          name: lint
          command: |
            cargo fmt -- --check
            flake8 --max-line-length=88 python/ benchmarks/
            black --check python/ benchmarks/ evaluation/
            cd python && cargo fmt -- --check


workflows:
  version: 2
  build:
    jobs:
      - rust-stable
      - python
      - lint
